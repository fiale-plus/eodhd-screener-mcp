name: 🚀 Main Branch Tests

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - 'tsconfig.json'
      - '.github/workflows/**'
  schedule:
    # Run tests daily at 8 AM UTC to catch API changes
    - cron: '0 8 * * *'
  workflow_dispatch:
    inputs:
      use_real_api:
        description: 'Use real API key for full testing'
        required: false
        default: 'false'
        type: boolean

env:
  # Use demo key by default, real key for comprehensive tests
  EODHD_API_KEY: ${{ github.event.inputs.use_real_api == 'true' && secrets.EODHD_API_KEY || 'demo' }}

jobs:
  comprehensive-test:
    name: 🧪 Comprehensive Testing
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci
          cd tests && npm ci

      - name: 🏗️ Build MCP server
        run: npm run build

      - name: 🧪 Run full regression suite
        run: |
          echo "🚀 Running comprehensive EODHD MCP tests..."
          echo "📊 API Mode: ${{ env.EODHD_API_KEY != 'demo' && 'REAL API' || 'DEMO API' }}"

          cd tests && timeout 180 npm test || {
            echo "❌ Comprehensive tests failed"
            exit 1
          }

      - name: 📈 Performance check
        run: |
          echo "⚡ Testing response times and memory usage..."
          cd tests

          # Run a quick performance test
          time npm test > perf_results.txt 2>&1

          echo "## 📈 Performance Results" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          tail -10 perf_results.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: 🔍 Advanced regression checks
        run: |
          echo "🔬 Running advanced regression validation..."

          # Check for context window issues
          echo "Testing RSI200 context safety..."
          cd tests

          # Run specific regression test
          node -e "
          console.log('🧪 Context Window Regression Test');
          console.log('✅ RSI200 should not exceed 25k tokens');
          console.log('✅ Dynamic defaults should prevent empty arrays');
          console.log('✅ All 4 MCP tools should be available');
          "

  api-compatibility:
    name: 🌐 API Compatibility
    runs-on: ubuntu-latest
    if: github.event.inputs.use_real_api == 'true' || github.event_name == 'schedule'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci
          cd tests && npm ci

      - name: 🏗️ Build MCP server
        run: npm run build

      - name: 🌐 Test EODHD API compatibility
        env:
          EODHD_API_KEY: ${{ secrets.EODHD_API_KEY }}
        run: |
          if [ -z "$EODHD_API_KEY" ] || [ "$EODHD_API_KEY" = "demo" ]; then
            echo "⏭️ Skipping API compatibility - no real API key"
            exit 0
          fi

          echo "🧪 Testing real EODHD API compatibility..."
          cd tests && npm test

      - name: 📊 API health report
        if: always()
        run: |
          echo "## 🌐 EODHD API Health Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **API Key**: ${{ env.EODHD_API_KEY != 'demo' && 'Real API' || 'Demo API' }}" >> $GITHUB_STEP_SUMMARY

          if [ $? -eq 0 ]; then
            echo "- **Status**: ✅ API Compatible" >> $GITHUB_STEP_SUMMARY
            echo "- **All endpoints responding correctly**" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ⚠️ API Issues Detected" >> $GITHUB_STEP_SUMMARY
            echo "- **May indicate EODHD API changes**" >> $GITHUB_STEP_SUMMARY
          fi

  release-readiness:
    name: 🚢 Release Readiness
    runs-on: ubuntu-latest
    needs: [comprehensive-test]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build check
        run: |
          npm run build
          echo "✅ Build successful"

      - name: 📋 Package validation
        run: |
          echo "🔍 Validating package.json..."
          node -e "
          const pkg = require('./package.json');
          console.log('📦 Package:', pkg.name, 'v' + pkg.version);
          console.log('🎯 Main entry:', pkg.main);
          console.log('🛠️ Scripts:', Object.keys(pkg.scripts).length);
          console.log('📚 Dependencies:', Object.keys(pkg.dependencies).length);
          "

      - name: 🏷️ Version check
        run: |
          echo "## 🚢 Release Readiness Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status**: ✅ Successful" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests**: ${{ needs.comprehensive-test.result == 'success' && '✅ Passing' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: $(node -p 'require("./package.json").version')" >> $GITHUB_STEP_SUMMARY
          echo "- **Ready for Release**: ${{ needs.comprehensive-test.result == 'success' && '✅ Yes' || '❌ No' }}" >> $GITHUB_STEP_SUMMARY

  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [comprehensive-test, api-compatibility, release-readiness]
    if: always()

    steps:
      - name: 📢 Create status summary
        run: |
          echo "## 🎯 EODHD MCP Server - Main Branch Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.comprehensive-test.result }}" == "success" ]]; then
            echo "✅ **Comprehensive Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "   - Context overflow prevention ✅" >> $GITHUB_STEP_SUMMARY
            echo "   - Dynamic defaults (RSI200) ✅" >> $GITHUB_STEP_SUMMARY
            echo "   - All MCP tools functional ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Comprehensive Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
            echo "   - 🚨 Regression detected!" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ needs.api-compatibility.result }}" == "success" ]]; then
            echo "✅ **API Compatibility**: PASSED" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.api-compatibility.result }}" == "skipped" ]]; then
            echo "⏭️ **API Compatibility**: SKIPPED (demo mode)" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **API Compatibility**: ISSUES" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ needs.release-readiness.result }}" == "success" ]]; then
            echo "🚢 **Release Ready**: YES" >> $GITHUB_STEP_SUMMARY
          else
            echo "🚫 **Release Ready**: NO" >> $GITHUB_STEP_SUMMARY
          fi