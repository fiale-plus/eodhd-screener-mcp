name: 🧪 Test Pull Request

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - 'tsconfig.json'
      - '.github/workflows/**'

env:
  EODHD_API_KEY: demo  # Using demo key for PR tests

jobs:
  test:
    name: 🔍 Regression Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci
          cd tests && npm ci

      - name: 🏗️ Build MCP server
        run: npm run build

      - name: 🔍 TypeScript type check
        run: |
          npx tsc --noEmit
          cd tests && npm run test:build

      - name: 🧪 Run regression tests
        run: |
          echo "🚀 Running EODHD MCP regression tests..."
          cd tests && timeout 120 npm test || {
            echo "❌ Tests failed or timed out"
            exit 1
          }

      - name: 📊 Test results summary
        if: always()
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Node Version**: ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **EODHD API**: Demo key (limited)" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests**: Regression suite for context overflow prevention" >> $GITHUB_STEP_SUMMARY

          if [ $? -eq 0 ]; then
            echo "- **Status**: ✅ PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ❌ FAILED" >> $GITHUB_STEP_SUMMARY
          fi

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 TypeScript check
        run: npx tsc --noEmit

      - name: 🧹 Check formatting (if prettier configured)
        continue-on-error: true
        run: |
          if [ -f ".prettierrc" ] || [ -f "prettier.config.js" ]; then
            npx prettier --check .
          else
            echo "⏭️ Prettier not configured, skipping"
          fi

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 🔒 Security audit
        run: |
          npm audit --audit-level=moderate
          cd tests && npm audit --audit-level=moderate

  summary:
    name: 📋 PR Summary
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: always()

    steps:
      - name: 📋 Create PR summary
        run: |
          echo "## 🧪 EODHD MCP Server - PR Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Regression Tests" >> $GITHUB_STEP_SUMMARY
          echo "- Tests context window overflow prevention" >> $GITHUB_STEP_SUMMARY
          echo "- Validates dynamic defaults (period × 1.5)" >> $GITHUB_STEP_SUMMARY
          echo "- Checks RSI200/SMA200 functionality" >> $GITHUB_STEP_SUMMARY
          echo "- Verifies all 4 MCP tools available" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "✅ **Regression Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Regression Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ needs.lint.result }}" == "success" ]]; then
            echo "✅ **Code Quality**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Code Quality**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ needs.security.result }}" == "success" ]]; then
            echo "✅ **Security**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Security**: ISSUES FOUND" >> $GITHUB_STEP_SUMMARY
          fi